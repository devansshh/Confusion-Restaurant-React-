{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","dishesLoading","type","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","comments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","leaders","maxLength","len","val","length","CommentForm","toggleModal","bind","handleSubmit","state","isModalOpen","this","setState","values","postComment","dishId","rating","author","comment","outline","isOpen","toggle","onSubmit","htmlFor","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","color","Component","RenderDish","in","transformProps","exitTransform","top","description","RenderComments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","check","Footer","RenderCard","item","designation","Home","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","size","offset","checkbox","RenderLeader","left","middle","object","body","heading","About","title","list","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","lead","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e20ddbf4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n  function RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        \r\n        <Link to={`/menu/${dish.id}`} >\r\n            <Card >\r\n                <CardImg width=\"100%\" src={ baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Card>\r\n        </Link>\r\n            \r\n    );\r\n}\r\n\r\n\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum:telnum , \r\n    email:email , \r\n    agree: agree , \r\n    contactType: contactType, \r\n    message: message\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => {alert(response)})\r\n  .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Col, Row, Label, Modal, ModalHeader, ModalBody  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props); \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {         \r\n          isModalOpen: false\r\n        };  \r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);       \r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment </Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className='form-group'>\r\n                            <Label htmlFor=\"rating\" md={12}>Rating</Label>   \r\n                            <Col>                         \r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </Col>                             \r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                            <Col>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"  \r\n                                    validators={{\r\n                                        minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}                                 \r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".yourname\"\r\n                                    show=\"touched\"\r\n                                    messages={{                                        \r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                               \r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                            <Col>   \r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\"/>\r\n                            </Col>   \r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Button type=\"submit\" color=\"primary\" md={12}>\r\n                                Submit\r\n                            </Button>     \r\n                            </Col>\r\n                                \r\n                            \r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n    function RenderDish({ dish }){\r\n        if (dish != null)\r\n            return(\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                    <FadeTransform\r\n                        in\r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                        <Card>\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                            <CardBody>\r\n                                <CardTitle>{dish.name}</CardTitle>\r\n                                <CardText>{dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n                    \r\n                </div>                \r\n            )\r\n        else\r\n            return(\r\n                <div></div>\r\n            )\r\n            \r\n        \r\n    }\r\n    function RenderComments({ comments, postComment, dishId }){\r\n        if (comments != null)            \r\n                return(                    \r\n                    <div  className=\"col-12 col-md-5 m-1\"> \r\n                        <h4> Comments </h4>                                              \r\n                        <ul className=\"list-unstyled\">\r\n                            <Stagger in>\r\n                                {comments.map((comment) => {\r\n                                    return(\r\n                                        <Fade in>\r\n                                            <li><p>{comment.comment}</p> \r\n                                            <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p> \r\n                                            </li>\r\n                                        </Fade>\r\n                                        \r\n                                    );\r\n                                })}    \r\n                            </Stagger>\r\n                                                    \r\n                        </ul>\r\n                        <CommentForm dishId={dishId} postComment={postComment}/>\r\n                    </div>                    \r\n                );                  \r\n            \r\n        else\r\n            return(\r\n                <div></div>\r\n            );       \r\n        \r\n    }\r\n\r\n\r\n\r\n    const DishDetail= (props) => {   \r\n                \r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else \r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">                        \r\n                        <RenderDish dish={props.dish} />                       \r\n                        <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />                  \r\n                    </div>\r\n                </div>              \r\n                \r\n            );\r\n        }\r\n            \r\n       \r\n\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label  } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n      }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                        </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username = input} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password = input}  />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                innerRef={(input) => this.remember = input}  />\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n  if (isLoading) {\r\n    return(\r\n      <Loading />\r\n    );\r\n  }\r\n  else if (errMess) {\r\n      return(\r\n        <h4>{errMess}</h4>\r\n      );\r\n  }\r\n  else \r\n      return(\r\n        <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                  <Card>\r\n                      <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                      <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                      </CardBody>\r\n                  </Card>\r\n        </FadeTransform>\r\n        \r\n    );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row align-items-start\">\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess}/>\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n            </div>\r\n        </div>        \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;   ","import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);       \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n    }  \r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({item}) {\n\n        return (\n            <div key={item.id} className=\"col-12 mt-5\"> \n            \n            <Fade in>\n                <Media>                        \n                    <Media left middle>\n                        <Media object src={baseUrl + item.image} alt={item.name} />\n                    </Media>\n                    <Media body className=\"ml-5\">\n                        <Media heading>{item.name}</Media>\n                        <p>{item.designation}</p>\n                        <p>{item.description}</p>\n                    </Media> \n                </Media>       \n            </Fade>   \n                       \n                   \n            </div>\n        );\n}\n\nfunction About(props) {        \n    const leaders= props.leaderErrMess? \n        <h4>{props.leaderErrMess}</h4> :\n        (props.leaderLoading? <Loading /> :\n            props.leaders.leaders.map((leader) => {\n            return (\n                <RenderLeader item={leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\n            );\n        })) ;        \n    \n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">                   \n                    <Stagger in>\n                        <Media list>\n                            {leaders}\n                        </Media>\n                    </Stagger>                      \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport DishDetail from './DishdetailComponent.js';\r\nimport Header from './HeaderComponent.js';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () =>  dispatch(fetchDishes()),\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\nclass Main extends Component {\r\n  constructor(props){\r\n    super(props);    \r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  } \r\n\r\n  render(){\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n            promoLoading={this.props.promotions.isLoading}\r\n            promoErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((lead) => lead.featured)[0]}\r\n            leaderLoading={this.props.leaders.isLoading}\r\n            leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment} />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => \r\n\r\n                    <About leaders={this.props.leaders} leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess} /> } />\r\n\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => \r\n                    <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state={ isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n    \r\n        default:\r\n          return state;\r\n      }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state= { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n  \n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>            \n    );\n  }\n\n  \n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n//import 'font-awesome/css/font-awesome.css';\nimport \"bootstrap-social/bootstrap-social.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}